# SPDX-FileCopyrightText: Copyright 2020-2023, Contributors to Tyranno
# SPDX-PackageHomePage: https://github.com/dmyersturnbull/tyranno
# SPDX-License-Identifier: Apache-2.0
name: publish

on:
  push:
    tags:
      - "v*"

jobs:
  test:
    name: Test
    uses: ./.github/workflows/test.yaml
    secrets: inherit

  github-publish:
    needs: [test]
    runs-on: ${{ os }}
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist
      - name: Publish GitHub release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          draft: false
          generate_release_notes: true
          fail_on_unmatched_files: true
          token: ${{ secrets.GITHUB_TOKEN }}
          files: dist/*

  pypi-publish:
    needs: [test]
    runs-on: ${{ os }}
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist
      - name: Install hatch
        run: pip install hatch~=1.7
      - name: Publish to PyPi
        run: hatch publish
        env:
          HATCH_INDEX_USER: __token__
          HATCH_INDEX_AUTH: ${{ secrets.PYPI_TOKEN }}
        if: ${{ env.pypi_token }} != ''

  docker-publish:
    needs: [test]
    runs-on: ${{ os }}
    steps:
      - name: Download Docker image
        uses: actions/download-artifact@v3
        with:
          name: docker
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ GITHUB_REPOSITORY }}
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        env:
          dockerhub_username: ${{ secrets.DOCKERHUB_USERNAME }}
          dockerhub_token: ${{ secrets.DOCKERHUB_TOKEN }}
        with:
          username: ${{ env.dockerhub_username }}
          password: ${{ env.dockerhub_token }}
        if: ${{ env.dockerhub_username }} != ''
      - name: Log in to GHCR
        uses: docker/login-action@v2
        env:
          ghcr_username: ${{ github.actor }}
          ghcr_password: ${{ secrets.GITHUB_TOKEN }}
        with:
          registry: ghcr.io
      - name: Push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  notify:
    name: Notify
    runs-on: ubuntu-latest
    needs: [pypi-publish, docker-publish]
    steps:
      - name: Send Slack notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_COLOR: ${{ job_status }}
          SLACK_LINK_NAMES: true
          MSG_MINIMAL: true
        if: ${{ SLACK_WEBHOOK }} != ''
